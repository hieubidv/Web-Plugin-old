@model MvcSiteMapProvider.Web.Html.Models.MenuHelperModel
@using System.Web.Mvc.Html
@using MvcSiteMapProvider.Web.Html.Models

@helper TopMenu(List<SiteMapNodeModel>
    nodeList)
{
    <nav class="navbar-default navbar-static-side" role="navigation">
        <div class="sidebar-collapse">
            <ul class="nav metismenu" id="side-menu">
                <li class="nav-header">
                    <div class="dropdown profile-element">
                        <img alt="image" class="rounded-circle" src="~/Content/img/profile_small.jpg" />
                        <a data-toggle="dropdown" class="dropdown-toggle" href="#">
                            <span class="block m-t-xs font-bold">Example user</span>
                            <span class="text-muted text-xs block">menu <b class="caret"></b></span>
                        </a>
                        <ul class="dropdown-menu animated fadeInRight m-t-xs">
                            <li><a class="dropdown-item" href="login.html">Logout</a></li>
                        </ul>
                    </div>
                    <div class="logo-element">
                        IN+
                    </div>
                </li>
                <!-- Main -->
                @foreach (SiteMapNodeModel node in nodeList)
                {
                    string url = node.IsClickable ? node.Url : "#";
                    string active = node.IsCurrentNode ? "class=\"active\"" : "";
                    string collapse = node.IsInCurrentPath ? " collapse in" : " collapse";

                    if (!node.Children.Any())
                    {
                        if (!node.Attributes.ContainsKey("cssclass"))
                        {
                            <li @Html.Raw(active)>
                                <a href="@url" class="nav-link">
                                    <i class="fa fa-th-large"></i>
                                    <span>@node.Title</span>
                                </a>
                            </li>
                        }
                        else
                        {
                            <li @Html.Raw(active)>
                                <a href="@url" class="nav-link">
                                    <i class="@node.Attributes["cssclass"].ToString()"></i>
                                    <span>@node.Title</span>
                                </a>
                            </li>
                        }
                    }
                    else
                    {
                        if (!node.Attributes.ContainsKey("cssclass"))
                        {
                            <li @Html.Raw(active)>
                                <a href="#" class="nav-link"><span>@node.Title</span></a>
                                @DropDownMenu(node.Children, "nav-second-level" + collapse, true)
                            </li>
                        }
                        else
                        {
                            <li @Html.Raw(active)>
                                <a href="#" class="nav-link"><i class="@node.Attributes["cssclass"].ToString()"></i> <span>@node.Title</span></a>
                                @DropDownMenu(node.Children, "nav-second-level" + collapse, true)
                            </li>
                        }

                    }
                }
                <!-- /main -->
            </ul>
        </div>
    </nav>
}

@helper DropDownMenu(SiteMapNodeModelList nodeList, string csslevel, bool isMultiLevel = false)
{
    <ul class="nav @csslevel">
        @foreach (SiteMapNodeModel node in nodeList)
        {
            string url = node.IsClickable ? node.Url : "#";
            string active = node.IsCurrentNode ? "class=\"active\"" : "";
            string collapse = node.IsInCurrentPath ? " collapse in" : " collapse";
            if (!node.Children.Any())
            {
                <li @Html.Raw(active)><a href="@url" class="nav-link">@node.Title</a></li>
            }
            else
            {
                <li @Html.Raw(active)>
                    <a href="#" class="nav-link">@node.Title</a>
                    @DropDownMenu(node.Children, "nav-third-level" + collapse, true)
                </li>
            }
        }
    </ul>
}

@TopMenu(Model.Nodes)
